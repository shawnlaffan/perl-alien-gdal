use 5.010;
use alienfile;

use Cwd;
my $base_dir = getcwd();
my $patch_file = "$base_dir/patch_isnan_gcc.patch";

say "Patch file is $patch_file";
#say -r $patch_file or die $!;

plugin 'PkgConfig' => 'gdal';

plugin 'Probe::CommandLine' => (
  command   => 'gdal-config',
  secondary => 1,
);

share {

  plugin Download => (
    url     => 'http://download.osgeo.org/gdal/CURRENT',
    version => qr/^gdal-([0-9\.]+)\.tar\.gz$/,
  );

  plugin Extract => 'tar.gz';
  
  if ($^O =~ /mswin/i) {
    #  need additional conditions for version le 2.2.3
      patch [
        '%{patch} --verbose --backup port/cpl_port.h < ' . $patch_file,
      ];
  }

  plugin 'Build::Autoconf' => ();

  my $build_static = ($^O =~ /mswin/i) ? '' : '--disable-shared';
  #  disable by default - we don't want huge binaries and likely don't need a static build
  #  but travis CI has a 4MB log limit which we otherwise hit
  #$build_static = ($ENV{CONTINUOUS_INTEGRATION} && $ENV{TRAVIS})
  #      ? '--disable-shared'
  #      : '';

  $build_static = '' if $ENV{FORCE_DYNAMIC};
  
  my $make_cmd = '%{make}';
  #  try not to fill up the cpan-testers disk space,
  #  but need to think more on the approach - the || will likely trap any fails,
  #  thus installation will proceed regardless
  #if ($^O =~ /mswin/i) {
  #  $make_cmd .= q/ | perl -ne "BEGIN {$|=1; open our $log, q|>|, q|build.log|}; print qq|\n| if 0 == ($. %% 100); print q|.|; print {$log} $_;" || type build.log/;
  #}
  #else {
  #  $make_cmd .= q/ | perl -ne 'BEGIN {$|=1; open our $log, ">", "build.log"}; print "\n" if 0 == ($. % 90); print "."; print {$log} $_;' || cat build.log/;
  #}
  
  # the build step is only necessary if you need to customize the
  # options passed to ./configure.  The default set by the
  # Build::Autoconf plugin is frequently sufficient.
  build [
    '%{configure} ' . $build_static,
    $make_cmd,
    '%{make} install',
  ];
};
